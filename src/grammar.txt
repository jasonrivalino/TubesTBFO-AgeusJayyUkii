S -> ENTER S
S -> S ENTER
S -> ENTER
S -> IMPORT_ST
S -> IMPORT_ST ENTER S
S -> IMPORT_ST ENTER SS
S -> SS
SS -> PT SS
PT -> CONTROLFLOW_ST
PT -> VARIABEL
PT -> FUNC_ST
PT -> FOR_ST
PT -> ITERATION_ST
PT -> SENTENCE
PT -> TRY_ST
PT -> CATCH_ST
PT -> FINALLY_ST
PT -> DELETE_ST
SS -> CONTROLFLOW_ST
SS -> VARIABEL
SS -> FUNC_ST
SS -> FOR_ST
SS -> ITERATION_ST
SS -> SENTENCE
SS -> TRY_ST
SS -> CATCH_ST
SS -> FINALLY_ST
SS -> DELETE_ST
CONTROLFLOW_ST -> IF_ST
CONTROLFLOW_ST -> ELSE_ST
CONTROLFLOW_ST -> SWITCH_ST
CONTROLFLOW_ST -> FINALLY_ST
ITERATION_ST -> FOR_ST
ITERATION_ST -> WHILE_ST
ITERATION_ST -> DO_WHILE_ST
SENTENCE -> IF_BLOCK
SENTENCE -> TRY_BLOCK
SENTENCE -> FUNCSENTENCE
SENTENCE -> FORSENTENCE
SENTENCE -> WHILESENTENCE
SENTENCE -> SWITCHSENTENCE
SENTENCE -> SWITCH_ST
SENTENCE -> TRY_ST
SENTENCE -> CATCH_ST
SENTENCE -> FINALLY_ST
SENTENCE -> TRYSENTENCE
SENTENCE -> CATCHSENTENCE
SENTENCE -> FINALLYSENTENCE
SENTENCE -> CASE_ST
SENTENCE -> DEFAULT_ST
SENTENCE -> CONTINUE_ST
SENTENCE -> BREAK_ST
SENTENCE -> ENTER SENTENCE
SENTENCE -> ASSIGN
SENTENCE -> DELETE_ST
SENTENCE -> SENTENCE ENTER SENTENCE
SENTENCE -> SENTENCE ENTER
WHILE_ST -> WHILE KURUNG_DEPAN LOGIC_SENTENCE KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN ENTER WHILESENTENCE SEMICOLON ENTER KURUNG_KURAWAL_BELAKANG 
WHILE_ST -> WHILE KURUNG_DEPAN LOGIC_SENTENCE KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN ENTER WHILESENTENCE SEMICOLON KURUNG_KURAWAL_BELAKANG
WHILE_ST -> WHILE KURUNG_DEPAN LOGIC_SENTENCE KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN WHILESENTENCE SEMICOLON ENTER KURUNG_KURAWAL_BELAKANG
WHILE_ST -> WHILE KURUNG_DEPAN LOGIC_SENTENCE KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN WHILESENTENCE SEMICOLON KURUNG_KURAWAL_BELAKANG
WHILE_ST -> WHILE KURUNG_DEPAN LOGIC_SENTENCE KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN KURUNG_KURAWAL_BELAKANG
WHILE_ST -> WHILE KURUNG_DEPAN LOGIC_SENTENCE KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN WHILESENTENCE SEMICOLON KURUNG_KURAWAL_BELAKANG
LOGIC_SENTENCE -> IDINT
LOGIC_SENTENCE -> ID
LOGIC_SENTENCE -> LOGIC_ID LOGIC_OPERATOR LOGIC_SENTENCE
LOGIC_SENTENCE -> LOGIC_ID LOGIC_OPERATOR LOGIC_ID
LOGIC_SENTENCE -> NOT LOGIC_SENTENCE
LOGIC_SENTENCE -> KURUNG_DEPAN LOGIC_SENTENCE KURUNG_BELAKANG
LOGIC_SENTENCE -> ID LOGIC_OPERATOR IDINT
WHILESENTENCE -> SENTENCE
WHILESENTENCE -> BREAK
WHILESENTENCE -> CONTINUE
WHILESENTENCE -> WHILESENTENCE ENTER WHILESENTENCE
WHILESENTENCE -> IF_BLOCK WHILESENTENCE
WHILESENTENCE -> OPERATION_ST
LOGIC_ID -> FUNCTION (BELUMPASTI)
LOGIC_ID -> IDINT
LOGIC_ID -> NOT IDINT
LOGIC_ID -> BOOLEAN 
LOGIC_ID -> NOT LOGIC_ID
LOGIC_ID -> KURUNG_DEPAN LOGIC_ID KURUNG_BELAKANG
LOGIC_ID -> 
BOOLEAN -> NOT BOOLEAN
LOGIC_OP -> ID
LOGIC_OP -> NOT LOGI_OP
LOGIC_OP -> LOGI_ID LOGIC_OPERATOR LOGI_OP
LOGIC_OP -> LOGI_ID LOGIC_OPERATOR LOGI_ID
LOGIC_OP -> KURUNG_DEPAN LOGI_OP KURUNG_BELAKANG
LOGIC_OPERATOR -> ISEQ
LOGIC_OPERATOR -> LEQ
LOGIC_OPERATOR -> L
LOGIC_OPERATOR -> GEQ
LOGIC_OPERATOR -> G
LOGIC_OPERATOR -> NEQ
LOGIC_OPERATOR -> AND
LOGIC_OPERATOR -> OR
IF_ST -> IF KURUNG_DEPAN IFCOND KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN ENTER IFSENTENCE ENTER KURUNG_KURAWAL_BELAKANG
IF_ST -> IF KURUNG_DEPAN IFCOND KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN ENTER IFSENTENCE KURUNG_KURAWAL_BELAKANG
IF_ST -> IF KURUNG_DEPAN IFCOND KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN IFSENTENCE ENTER KURUNG_KURAWAL_BELAKANG
IF_ST -> IF KURUNG_DEPAN IFCOND KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN IFSENTENCE KURUNG_KURAWAL_BELAKANG
IF_ST -> IF KURUNG_DEPAN IFCOND KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN ENTER KURUNG_KURAWAL_BELAKANG
ELIF_ST -> ELSE IF KURUNG_DEPAN IFCOND KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN ENTER IFSENTENCE ENTER KURUNG_KURAWAL_BELAKANG
ELIF_ST -> ELSE IF KURUNG_DEPAN IFCOND KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN ENTER IFSENTENCE KURUNG_KURAWAL_BELAKANG
ELIF_ST -> ELSE IF KURUNG_DEPAN IFCOND KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN IFSENTENCE ENTER KURUNG_KURAWAL_BELAKANG
ELIF_ST -> ELSE IF KURUNG_DEPAN IFCOND KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN IFSENTENCE KURUNG_KURAWAL_BELAKANG
ELIF_ST -> ELSE IF KURUNG_DEPAN IFCOND KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN KURUNG_KURAWAL_BELAKANG
ELSE_ST -> ELSE KURUNG_KURAWAL_DEPAN ENTER IFSENTENCE ENTER KURUNG_KURAWAL_BELAKANG
ELSE_ST -> ELSE KURUNG_KURAWAL_DEPAN ENTER IFSENTENCE KURUNG_KURAWAL_BELAKANG
ELSE_ST -> ELSE KURUNG_KURAWAL_DEPAN IFSENTENCE ENTER KURUNG_KURAWAL_BELAKANG
ELSE_ST -> ELSE KURUNG_KURAWAL_DEPAN IFSENTENCE KURUNG_KURAWAL_BELAKANG
ELSE_ST -> ELSE KURUNG_KURAWAL_DEPAN KURUNG_KURAWAL_BELAKANG
NESTED_IF_ST -> ELIF_ST
NESTED_IF_ST -> NESTED_IF_STMT ENTER ELIF_ST
IF_BLOCK -> IF_ST
IF_BLOCK -> IF_ST ENTER NESTED_IF_ST
IF_BLOCK -> IF_ST NESTED_IF_ST
IF_BLOCK -> IF_ST ENTER NESTED_IF_ST ENTER ELSE_ST
IF_BLOCK -> IF_ST NESTED_IF_ST ELSE_ST
IF_BLOCK -> IF_ST ENTER ELSE_ST
IF_BLOCK -> IF_ST ELSE_ST
IFCOND -> ID LOGIC_OPERATOR IDINT
IFCOND -> ID KURUNG_DEPAN KURUNG_BELAKANG
IFCOND -> ID KURUNG_DEPAN PARAM KURUNG_BELAKANG
IFCOND -> BOOLEAN
IFCOND -> IDINT
IFCOND -> IFCOND ARIT_OP IFCOND
IFCOND -> IFCOND LOGI_OP IFCOND
IFCOND -> IFCOND LOGIC_OPERATOR IFCOND
IFCOND -> ID
IFCOND -> FUNCTION
IFCOND -> LOGI_OP
IFCOND -> OPERATION_ST LOGIC_OPERATOR IDINT
IFSENTENCE -> IF_BLOCK
IFSENTENCE -> SENTENCE SEMICOLON
IFSENTENCE -> SENTENCE IFSENTENCE SEMICOLON
IFSENTENCE -> OPERATION_ST SEMICOLON
IFSENTENCE -> ID KURUNG_DEPAN KURUNG_BELAKANG SEMICOLON
IFSENTENCE -> ID KURUNG_DEPAN PARAM KURUNG_BELAKANG SEMICOLON
IFSENTENCE -> BOOLEAN SEMICOLON
IFSENTENCE -> IDINT
IFSENTENCE -> IFSENTENCE ARIT_OP IFSENTENCE
IFSENTENCE -> IFSENTENCE LOGI_OP IFSENTENCE
IFSENTENCE -> IFSENTENCE LOGIC_OPERATOR IFSENTENCE
IFSENTENCE -> ID
IFSENTENCE -> FUNCTION
IFSENTENCE -> LOGI_OP
IFSENTENCE -> RETURN_ST
IFSENTENCE -> BREAK 
IFSENTENCE -> IFSENTENCE ENTER IFSENTENCE
FOR_ST -> FOR KURUNG_DEPAN INISIALISASI SEMICOLON FORCOND SEMICOLON AFTERTHOUGHT KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN ENTER FORSENTENCE ENTER KURUNG_KURAWAL_BELAKANG
FOR_ST -> FOR KURUNG_DEPAN INISIALISASI SEMICOLON FORCOND SEMICOLON AFTERTHOUGHT KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN ENTER FORSENTENCE KURUNG_KURAWAL_BELAKANG
FOR_ST -> FOR KURUNG_DEPAN INISIALISASI SEMICOLON FORCOND SEMICOLON AFTERTHOUGHT KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN FORSENTENCE ENTER KURUNG_KURAWAL_BELAKANG
FOR_ST -> FOR KURUNG_DEPAN INISIALISASI SEMICOLON FORCOND SEMICOLON AFTERTHOUGHT KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN FORSENTENCE KURUNG_KURAWAL_BELAKANG
FOR_ST -> FOR KURUNG_DEPAN INISIALISASI SEMICOLON FORCOND SEMICOLON AFTERTHOUGHT KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN KURUNG_KURAWAL_BELAKANG
INISIALISASI -> ID EQUALS INT
FORCOND -> STRING LOGIC_OPERATOR IDINT
FORCOND -> ID LOGIC_OPERATOR IDINT
FORCOND -> IDINT LOGIC_OPERATOR IDINT
FORCOND -> ALL LOGIC_OPERATOR IDINT
AFTERTHOUGHT -> INCREMENT
AFTERTHOUGHT -> STRING DECREMENT
AFTERTHOUGHT -> ID INCREMENT
INCREMENT -> ADD ADD
DECREMENT -> SUB SUB
FORSENTENCE -> SENTENCE
FORSENTENCE -> BREAK
FORSENTENCE -> CONTINUE
FORSENTENCE -> FORSENTENCE ENTER FORSENTENCE
FORSENTENCE -> IF_BLOCK FORSENTENCE
FUNC_ST -> FUNCTION ID KURUNG_DEPAN FUNCID KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN ENTER FUNCSENTENCE ENTER KURUNG_KURAWAL_BELAKANG
FUNC_ST -> FUNCTION ID KURUNG_DEPAN FUNCID KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN ENTER FUNCSENTENCE KURUNG_KURAWAL_BELAKANG
FUNC_ST -> FUNCTION ID KURUNG_DEPAN FUNCID KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN FUNCSENTENCE ENTER KURUNG_KURAWAL_BELAKANG
FUNC_ST -> FUNCTION ID KURUNG_DEPAN FUNCID KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN FUNCSENTENCE KURUNG_KURAWAL_BELAKANG
FUNC_ST -> FUNCTION ID KURUNG_DEPAN KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN ENTER FUNCSENTENCE ENTER KURUNG_KURAWAL_BELAKANG
FUNC_ST -> FUNCTION ID KURUNG_DEPAN KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN ENTER FUNCSENTENCE KURUNG_KURAWAL_BELAKANG
FUNC_ST -> FUNCTION ID KURUNG_DEPAN KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN FUNCSENTENCE ENTER KURUNG_KURAWAL_BELAKANG
FUNC_ST -> FUNCTION ID KURUNG_DEPAN KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN FUNCSENTENCE KURUNG_KURAWAL_BELAKANG
FUNC_ST -> FUNCTION ID KURUNG_DEPAN KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN KURUNG_KURAWAL_BELAKANG
FUNCID -> ID
FUNCID -> ID EQ ALL
FUNCID -> ID EQ BOOLEAN
FUNCID -> ID COMMA FUNCID
FUNCID -> ID EQ ALL COMMA FUNCID
FUNCID -> ID EQ BOOLEAN COMMA FUNCID
FUNCSENTENCE -> SENTENCE SEMICOLON
FUNCSENTENCE -> RETURN ALL SEMICOLON
FUNCSENTENCE -> RETURN BOOLEAN SEMICOLON
FUNCSENTENCE -> RETURN IFCOND SEMICOLON
FUNCSENTENCE -> RETURN LOGI_OP SEMICOLON
FUNCSENTENCE -> IF_BLOCK SEMICOLON
FUNCSENTENCE -> FUNCSENTENCE RETURN ALL SEMICOLON
FUNCSENTENCE -> FUNCSENTENCE RETURN BOOLEAN SEMICOLON
FUNCSENTENCE -> FUNCSENTENCE RETURN IFCOND SEMICOLON
FUNCSENTENCE -> FUNCSENTENCE RETURN LOGI_OP SEMICOLON
FUNCSENTENCE -> SENTENCE FUNCSENTENCE
TRY_ST -> TRY KURUNG_KURAWAL_DEPAN ENTER TRYSTATEMENT ENTER KURUNG_KURAWAL_BELAKANG
TRY_ST -> TRY KURUNG_KURAWAL_DEPAN ENTER TRYSTATEMENT KURUNG_KURAWAL_BELAKANG
TRY_ST -> TRY KURUNG_KURAWAL_DEPAN TRYSTATEMENT ENTER KURUNG_KURAWAL_BELAKANG
TRY_ST -> TRY KURUNG_KURAWAL_DEPAN TRYSTATEMENT KURUNG_KURAWAL_BELAKANG
TRY_ST -> TRY KURUNG_KURAWAL_DEPAN KURUNG_KURAWAL_BELAKANG
CATCH_ST -> CATCH KURUNG_DEPAN VAR KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN ENTER CATCHSTATEMENT ENTER KURUNG_KURAWAL_BELAKANG
CATCH_ST -> CATCH KURUNG_DEPAN VAR KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN ENTER CATCHSTATEMENT KURUNG_KURAWAL_BELAKANG
CATCH_ST -> CATCH KURUNG_DEPAN VAR KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN CATCHSTATEMENT ENTER KURUNG_KURAWAL_BELAKANG
CATCH_ST -> CATCH KURUNG_DEPAN VAR KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN CATCHSTATEMENT KURUNG_KURAWAL_BELAKANG
CATCH_ST -> CATCH KURUNG_DEPAN KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN KURUNG_KURAWAL_BELAKANG
FINALLY_ST -> FINALLY KURUNG_KURAWAL_DEPAN ENTER FINALLYSTATEMENT ENTER KURUNG_KURAWAL_BELAKANG
FINALLY_ST -> FINALLY KURUNG_KURAWAL_DEPAN ENTER FINALLYSTATEMENT KURUNG_KURAWAL_BELAKANG
FINALLY_ST -> FINALLY KURUNG_KURAWAL_DEPAN FINALLYSTATEMENT ENTER KURUNG_KURAWAL_BELAKANG
FINALLY_ST -> FINALLY KURUNG_KURAWAL_DEPAN FINALLYSTATEMENT KURUNG_KURAWAL_BELAKANG
FINALLY_ST -> FINALLY KURUNG_KURAWAL_DEPAN KURUNG_KURAWAL_BELAKANG
NESTED_TRY_ST -> TRY_ST
NESTED_TRY_ST -> TRY_ST NESTED_TRY_ST
TRY_BLOCK -> TRY_ST
TRY_BLOCK -> TRY_ST NESTED_TRY_ST
TRY_BLOCK -> TRY_ST NESTED_TRY_ST CATCH_ST
TRY_BLOCK -> TRY_ST NESTED_TRY_ST FINALLY_ST
TRY_BLOCK -> TRY_ST NESTED_TRY_ST CATCH_ST FINALLY_ST
RETURN_ST -> RETURN ALL SEMICOLON
RETURN_ST -> RETURN SEMICOLON
RETURN_ST -> RETURN BOOLEAN SEMICOLON
RETURN_ST -> RETURN OPERATION_ST SEMICOLON
OPERATION_ST -> IDINT ARIT_OPERATOR IDINT
OPERATION_ST -> IDINT ARIT_OPERATOR OPERATION_ST
OPERATION_ST -> IDINT SUB SUB
OPERATION_ST -> IDINT ADD ADD
THROW -> THROW ALL SEMICOLON
CONTINUE_ST -> CONTINUE SEMICOLON
CONTINUE_ST -> CONTINUE ALL SEMICOLON
SWITCH_ST -> SWITCH KURUNG_DEPAN SWITCHCOND KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN ENTER CASE_ST ENTER KURUNG_KURAWAL_BELAKANG
SWITCH_ST -> SWITCH KURUNG_DEPAN SWITCHCOND KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN ENTER CASE_ST KURUNG_KURAWAL_BELAKANG
SWITCH_ST -> SWITCH KURUNG_DEPAN SWITCHCOND KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN CASE_ST ENTER KURUNG_KURAWAL_BELAKANG
SWITCH_ST -> SWITCH KURUNG_DEPAN SWITCHCOND KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN CASE_ST KURUNG_KURAWAL_BELAKANG
SWITCH_ST -> SWITCH KURUNG_DEPAN SWITCHCOND KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN ENTER CASE_ST DEFAULT_ST ENTER KURUNG_KURAWAL_BELAKANG
SWITCH_ST -> SWITCH KURUNG_DEPAN SWITCHCOND KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN ENTER CASE_ST DEFAULT_ST KURUNG_KURAWAL_BELAKANG
SWITCH_ST -> SWITCH KURUNG_DEPAN SWITCHCOND KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN CASE_ST ENTER DEFAULT_ST KURUNG_KURAWAL_BELAKANG
SWITCH_ST -> SWITCH KURUNG_DEPAN SWITCHCOND KURUNG_BELAKANG KURUNG_KURAWAL_DEPAN CASE_ST DEFAULT_ST KURUNG_KURAWAL_BELAKANG
SWITCH_ST -> SWITCH KURUNG_DEPAN
SWITCHCOND -> ALL
SWITCHCOND -> FUNCTION
SWITCHCOND -> VARIABEL
CASE_ST -> CASE ALL COLON
CASE_ST -> CASE COLON
CASE_ST -> CASE IDINT COLON
CASE_ST -> CASE IDINT COLON ENTER CASESENTENCE ENTER BREAK SEMICOLON
CASE_ST -> CASE IDINT COLON ENTER CASESENTENCE BREAK SEMICOLON
CASE_ST -> CASE IDINT COLON CASESENTENCE ENTER BREAK SEMICOLON
CASE_ST -> CASE IDINT COLON CASESENTENCE BREAK SEMICOLON
NESTED_CASE_STMT -> CASE_ST
NESTED_CASE_STMT -> CASE_ST NESTED_CASE_STMT
CASESENTENCE -> SENTENCE SEMICOLON
DEFAULT_ST -> DEFAULT COLON
DEFAULT_ST -> DEFAULT COLON ENTER DEFAULTSENTENCE ENTER BREAK SEMICOLON
DEFAULT_ST -> DEFAULT COLON ENTER DEFAULTSENTENCE BREAK SEMICOLON
DEFAULT_ST -> DEFAULT COLON DEFAULTSENTENCE ENTER BREAK SEMICOLON
DEFAULT_ST -> DEFAULT COLON DEFAULTSENTENCE BREAK SEMICOLON
DEFAULTSENTENCE -> SENTENCE SEMICOLON
DELETE_ST -> DELETE OBJECT DOT PROPERTY
DELETE_ST -> DELETE OBJECT KURUNG_SIKU_DEPAN PROPERTY KURUNG_SIKU_BELAKANG
OBJECT -> ALL
PROPERTY -> ALL 
CONSOLELOG -> CONSOLE DOT LOG KURUNG_DEPAN IDINT KURUNG_BELAKANG SEMICOLON
DELETE_ST -> DELETE
ASSIGN -> ID ASSIGN_OP ASSIGNMENT
ASSIGN_OP -> EQ
OPERATION -> ARIT_OP
OPERATION -> LOGI_OP
ASSIGNMENT -> OPERATION
ASSIGNMENT -> ID
ASSIGNMENT -> ALL
ASSIGNMENT -> FUNCTION
VARIABEL -> ALL
VARIABEL -> CONST
VARIABEL -> LET
VARIABEL -> VAR
ARIT_OPERATOR -> ADD
ARIT_OPERATOR -> SUB 
ARIT_OPERATOR -> MUL
ARIT_OPERATOR -> DIV
ARIT_OPERATOR -> MOD
ARIT_OPERATOR -> POW
ENTER -> NEWLINE
ENTER -> NEWLINE ENTER
ID -> KURUNG_DEPAN IDINT KURUNG_BELAKANG
IDINT -> ID
IDINT -> INT
IDINT -> BOOLEAN
IDINT -> NONE
ALL -> IDINT
ALL -> STRING
BOOLEAN -> TRUE
BOOLEAN -> FALSE
BOOLEAN -> NONE
VARIABEL -> ALL
VARIABEL -> CONST
VARIABEL -> LET
VARIABEL -> VAR
CONST -> 'CONST'
LET -> 'LET'
VAR -> 'VAR'
TRUE -> ‘TRUE’
FALSE -> ‘FALSE’
NULL -> ‘NULL’
IF -> 'IF'
ELSE -> 'ELSE'
WHILE -> 'WHILE'
FOR -> 'FOR'
FUNCTION -> 'FUNCTION'
RETURN -> 'RETURN'
THROW -> 'THROW'
CONTINUE -> 'CONTINUE'
SWITCH -> 'SWITCH'
CASE -> 'CASE'
DEFAULT -> 'DEFAULT'
BREAK -> 'BREAK'
DELETE -> 'DELETE'
ADD -> 'ADD'
SUB -> 'SUB'
MUL -> 'MUL'
DIV -> 'DIV'
MOD -> 'MOD'
EQ -> 'EQ'
AND -> 'AND'
OR -> 'OR'
NOT -> 'NOT'
GEQ -> 'GEQ'
LEQ -> 'LEQ'
G -> 'G'
L -> 'L'
NEQ -> 'NEQ'
NONE -> 'NONE'
COLON -> 'COLON'
SEMICOLON -> 'SEMICOLON'
ID -> 'ID'
INT -> 'INT'
STRING -> 'STRING'
DELETE_ST -> DELETE DOT SEMICOLON
DELETE_ST -> DELETE IDINT DOT IDINT SEMICOLON